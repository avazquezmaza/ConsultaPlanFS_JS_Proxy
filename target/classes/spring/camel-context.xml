<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:camel="http://camel.apache.org/schema/spring"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd        http://camel.apache.org/schema/spring http://camel.apache.org/schema/spring/camel-spring.xsd">
    <bean class="com.redhat.camel.osb.FaultProcessor" id="faultProcessor"/>
    <bean class="com.redhat.camel.osb.InboundMessageContextProcessor" id="inboundProcessor"/>
    <bean class="com.redhat.camel.osb.OutboundMessageContextProcessor" id="outboundProcessor"/>
    <bean class="com.redhat.camel.SoapHeaderProcessor" id="soapHeaderProcessor"/>
    <bean class="com.redhat.camel.osb.saxon.SaxonXQueryLanguage" id="xquery"/>
    <bean class="org.apache.cxf.interceptor.LoggingOutInterceptor" id="loggingOutInterceptor"/>
    <bean class="org.apache.cxf.interceptor.LoggingInInterceptor" id="loggingInInterceptor"/>
    <bean class="com.redhat.movil.commons.JsonXml" id="JsonXml"/>
    <bean class="com.redhat.movil.commons.Utility" id="Utility"/>
    <camelContext id="camelContext-App" xmlns="http://camel.apache.org/schema/spring">
        <onException id="_onException1">
            <exception>java.lang.Exception</exception>
            <redeliveryPolicy maximumRedeliveries="0"/>
            <handled>
                <constant>true</constant>
            </handled>
        </onException>
        <!-- ==================================== -->
        <!-- Rest -->
        <!-- ==================================== -->
        <restConfiguration apiContextPath="/api-docs"
            apiContextRouteId="doc-api" component="servlet"
            contextPath="/app" enableCORS="true" scheme="http">
            <apiProperty key="api.title" value="Rest App_Movil"/>
            <apiProperty key="api.version" value="1.0"/>
            <apiProperty key="api.specification.contentType.json" value="application/vnd.oai.openapi+json;version=2.0"/>
            <apiProperty key="cors" value="true"/>
            <camel:corsHeaders key="Access-Control-Allow-Methods" value="POST"/>
        </restConfiguration>
        <!-- ==================================== -->
        <!-- post-operation -->
        <!-- ==================================== -->
        <!-- defines the rest services using the context-path //operation -->
        <rest consumes="application/json" id="rest-operation"
            path="/plan/purchased" produces="application/json">
            <post consumes="application/json" id="post-app-movil"
                outType="String.class" produces="application/json"
                type="String.class" uri="/phone/{phoneNumber}">
                <description>seda:dispatchRequest</description>
                <camel:param name="body" required="true" type="body"/>
                <camel:responseMessage code="200" message="Sucess"/>
                <to uri="seda:dispatchRequest"/>
            </post>
        </rest>
        <route id="router">
            <from id="_from1" uri="seda:dispatchRequest"/>
            <doTry id="_doTry1">
                <choice id="_choice1">
                    <when id="_when1">
                        <simple resultType="java.lang.String">${header.CamelHttpMethod} == 'POST'</simple>
                        <to id="_to1" uri="direct:PipelinePairConsultaPlanFS_request"/>
                        <to id="_to2" uri="direct:RouteNodeQueryPurchasedOffering_request"/>
                        <to id="_to3" uri="direct:PipelinePairConsultaPlanFS_response"/>
                    </when>
                    <otherwise id="_otherwise1">
                        <to id="_to3" uri="direct:Default1_request"/>
                        <to id="_to4" uri="direct:Default1_response"/>
                    </otherwise>
                </choice>
                <doCatch id="_doCatch1">
                    <exception>java.lang.Exception</exception>
                    <log id="_log1" loggingLevel="ERROR" message="${exception.message}, ${exception.stacktrace}"/>
                    <to id="_to5" uri="direct:_onErrorHandler-5282490157209716060-252edc8b.15f7d309bbd.-7725"/>
                </doCatch>
            </doTry>
            <removeHeaders id="_removeHeaders1" pattern="*"/>
        </route>
        <route id="PipelinePairConsultaPlanFS_request">
            <from id="_from2" uri="direct:PipelinePairConsultaPlanFS_request"/>
            <log id="_log2" loggingLevel="INFO" message="Starting request-pipeline PipelinePairConsultaPlanFS_request"/>
            <choice id="_choice2">
                <when id="_when2">
                    <camel:simple>${header.phoneNumber} == null || ${header.phoneNumber} == ':phoneNumber'</camel:simple>
                    <setProperty id="_setProperty2" propertyName="Message">
                        <xquery>'Business Error'</xquery>
                    </setProperty>
                    <setProperty id="_setProperty3" propertyName="Code">
                        <xquery>'1052'</xquery>
                    </setProperty>
                    <setProperty id="_setProperty4" propertyName="Detail">
                        <xquery>'Los argumentos suministrados son incorrectos'</xquery>
                    </setProperty>
                    <camel:setBody id="_setBody3">
                        <xquery>resource:classpath:faultJSONRs.xquery</xquery>
                    </camel:setBody>
                    <setHeader headerName="Content-Type" id="_setHeader1">
                        <xquery>'application/*[local-name()="json"] ; charset=ISO-8959-1'</xquery>
                    </setHeader>
                    <throwException exceptionType="java.lang.Exception"
                        id="_throwException1" message="${body}"/>
                </when>
            </choice>
            <bean id="_bean1" method="jsonToXML(${body})" ref="JsonXml"/>
            <convertBodyTo id="_convertBodyTo1" type="String"/>
            <setProperty id="_setProperty8" propertyName="peticion">
                <xquery type="java.lang.String">
					declare variable $in.body external;
					parse-xml-fragment($in.body)
                </xquery>
            </setProperty>
            <choice id="_choice3">
                <when id="_when3">
                    <xquery>
						declare variable $in.body external; data(parse-xml-fragment($in.body)/*/*[local-name()!="descIncEureka"])
						and data(parse-xml-fragment($in.body)/*/*[local-name()!="idContacto"])
                    </xquery>
                    <camel:log id="_log17" message="Sin errores"/>
                </when>
                <otherwise id="_otherwise3">
                    <setProperty id="_setProperty9" propertyName="Message">
                        <xquery>'Business Error'</xquery>
                    </setProperty>
                    <setProperty id="_setProperty10" propertyName="Code">
                        <xquery>'1052'</xquery>
                    </setProperty>
                    <setProperty id="_setProperty11" propertyName="Detail">
                        <xquery>'Los argumentos suministrados son incorrectos'</xquery>
                    </setProperty>
                    <setProperty id="_setProperty12" propertyName="body">
                        <xquery>resource:classpath:faultJSONRs.xquery</xquery>
                    </setProperty>
                    <setHeader headerName="Content-Type" id="_setHeader2">
                        <xquery>'application/*[local-name()="json"];charset=iso-8859-1'</xquery>
                    </setHeader>
                    <throwException exceptionType="java.lang.Exception"
                        id="_throwException7" message="${body}"/>
                </otherwise>
            </choice>
            <log id="_log3" loggingLevel="INFO" message="Completed request-pipeline PipelinePairConsultaPlanFS_request"/>
        </route>
        <route id="Default1_request">
            <from id="_from3" uri="direct:Default1_request"/>
            <log id="_log4" loggingLevel="INFO" message="Starting request-pipeline Default1_request"/>
            <log id="_log5" loggingLevel="INFO" message="Completed request-pipeline Default1_request"/>
        </route>
        <route id="RouteNodeQueryPurchasedOffering_request">
            <from id="_from9" uri="direct:RouteNodeQueryPurchasedOffering_request"/>
            <log id="_log18" loggingLevel="INFO" message="Starting RouteNodeQueryPurchasedOffering_request"/>
            <doTry id="_doTry3">
                <setProperty id="_setProperty1" propertyName="phone">
                    <camel:simple>${header.phoneNumber}</camel:simple>
                </setProperty>
                <setHeader headerName="inputBodyInteraction" id="_setHeader18">
                    <xquery>resource:classpath:QueryPurchasedOfferingRequest.xquery</xquery>
                </setHeader>
                <setProperty id="_setProperty6" propertyName="originator">
                    <xquery>'co:es:TEF: USSD:USSD'</xquery>
                </setProperty>
                <setProperty id="_setProperty7" propertyName="userID">
                    <xquery>22</xquery>
                </setProperty>
                <setProperty id="_setProperty14" propertyName="country">
                    <xquery>'co'</xquery>
                </setProperty>
                <setProperty id="_setProperty52" propertyName="entity">
                    <xquery>'TEF'</xquery>
                </setProperty>
                <setProperty id="_setProperty53" propertyName="system">
                    <xquery>'USSD'</xquery>
                </setProperty>
                <setProperty id="_setProperty54" propertyName="userValue">
                    <xquery>'Greta_USSD'</xquery>
                </setProperty>
                <setProperty id="_setProperty55" propertyName="passwordValue">
                    <xquery>'qXQvjReSEjy22iaNjPAPB8btX4oEgsgt6nNmTzkQmpU='</xquery>
                </setProperty>
                <setProperty id="_setProperty56" propertyName="lang">
                    <xquery>'es'</xquery>
                </setProperty>
                <setProperty id="_setProperty57" propertyName="operation">
                    <xquery>'QueryPurchasedOffering_v1'</xquery>
                </setProperty>
                <setProperty id="_setProperty58" propertyName="chanelValue">
                    <xquery>22</xquery>
                </setProperty>
                <setHeader headerName="inputHeaderInteraction" id="_setHeader19">
                    <xquery>resource:classpath:headerFSRequest.xquery</xquery>
                </setHeader>
                <setProperty id="_setProperty59" propertyName="inputInteraction">
                    <xquery>
                        declare variable $in.headers.inputHeaderInteraction external;
                        declare variable $in.headers.inputBodyInteraction external;
                        &lt;soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:head="http://telefonica.com/globalIntegration/header" xmlns:v1="http://telefonica.com/globalIntegration/services/QueryPurchasedOffering/v1"&gt;
                        &lt;soapenv:Header&gt;
                        {parse-xml-fragment($in.headers.inputHeaderInteraction)}
                        &lt;/soapenv:Header&gt;
                        &lt;soapenv:Body&gt;
                        {parse-xml-fragment($in.headers.inputBodyInteraction)}
                        &lt;/soapenv:Body&gt;
                        &lt;/soapenv:Envelope&gt;
                    </xquery>
                </setProperty>
                <setBody id="_setBody5">
                    <simple resultType="java.lang.String">${exchangeProperty.inputInteraction}</simple>
                </setBody>
                <camel:setHeader headerName="Accept" id="_setHeader20">
                    <camel:constant>text/xml</camel:constant>
                </camel:setHeader>
                <camel:setHeader headerName="Content-Type" id="_setHeader21">
                    <camel:constant>text/xml</camel:constant>
                </camel:setHeader>
                <camel:enrich id="callQuerypurchasedofferingfs">
                    <camel:simple>{{service.querypurchasedofferingfs_bs_business.url}}</camel:simple>
                </camel:enrich>
                <choice id="_choice4">
                    <when id="_when4">
                        <xquery>
						declare variable $in.body external; 
						exists($in.body/*:queryPurchasedOfferingResponse/*:rspBodyQPOItem/*:offeringInstanceQPOItem)
                    </xquery>
                        <camel:log id="_log19" message="Sin errores"/>
                    </when>
                    <otherwise id="_otherwise2">
                        <throwException
                            exceptionType="java.lang.Exception"
                            id="_throwException2" message="${body}"/>
                    </otherwise>
                </choice>
                <doCatch id="_doCatch3">
                    <exception>java.lang.Exception</exception>
                    <log id="_log20" loggingLevel="ERROR" message="${exception.message}, ${exception.stacktrace}"/>
                    <to id="_to7" uri="direct:_onErrorHandler-5282490157209716060-252edc8b.15f7d309bbd.-7d73"/>
                </doCatch>
            </doTry>
        </route>
        <route id="PipelinePairConsultaPlanFS_response">
            <from id="_from4" uri="direct:PipelinePairConsultaPlanFS_response"/>
            <log id="_log6" loggingLevel="INFO" message="Starting response-pipeline PipelinePairConsultaPlanFS_response"/>
            <doTry id="_doTry2">
                <setHeader headerName="operationName" id="_setHeader3">
                    <constant/>
                </setHeader>
                <setHeader headerName="operationNamespace" id="_setHeader4">
                    <constant/>
                </setHeader>
                <camel:setHeader headerName="peticion" id="_setHeader17">
                    <camel:simple>${property.peticion}</camel:simple>
                </camel:setHeader>
                <setProperty id="_setProperty13" propertyName="param1">
                    <xquery>
                        declare variable $in.headers.peticion external; data(parse-xml-fragment($in.headers.peticion)/*/*[local-name()="descIncEureka"])
                    </xquery>
                </setProperty>
                <bean id="_bean2"
                    method="decodeBase64(${exchangeProperty.param1})" ref="Utility"/>
                <setProperty id="_setProperty5" propertyName="mensajeDescIncidencia">
                    <simple>${body}</simple>
                </setProperty>
                <removeProperty id="_removeProperty2" propertyName="param1"/>
                <setProperty id="_setProperty15" propertyName="primaryTelephoneNumber">
                    <camel:simple>${header.phoneNumber}</camel:simple>
                </setProperty>
                <setHeader headerName="xqueryContext" id="_setHeader6">
                    <simple>${exchangeProperty.peticion}</simple>
                </setHeader>
                <setProperty id="_setProperty16" propertyName="contactTypePartyAccountContact">
                    <xquery headerName="xqueryContext">
                        declare variable $in.headers.xqueryContext external; data(parse-xml-fragment($in.headers.xqueryContext)/*/*[local-name()="idContacto"])
                    </xquery>
                </setProperty>
                <removeHeader headerName="xqueryContext" id="_removeHeader2"/>
                <setProperty id="_setProperty13" propertyName="descriptionBusinessInteraction">
                    <simple resultType="java.lang.String">${exchangeProperty.mensajeDescIncidencia}</simple>
                </setProperty>
                <setHeader headerName="inputBodyInteraction" id="_setHeader5">
                    <xquery>resource:classpath:CreateInteractionRq.xquery</xquery>
                </setHeader>
                <setProperty id="_setProperty15" propertyName="originator">
                    <xquery>'co:es:TEF: APP:APP'</xquery>
                </setProperty>
                <setProperty id="_setProperty16" propertyName="userID">
                    <xquery>13</xquery>
                </setProperty>
                <setProperty id="_setProperty17" propertyName="country">
                    <xquery>'co'</xquery>
                </setProperty>
                <setProperty id="_setProperty18" propertyName="entity">
                    <xquery>'TEF'</xquery>
                </setProperty>
                <setProperty id="_setProperty19" propertyName="system">
                    <xquery>'APP'</xquery>
                </setProperty>
                <setProperty id="_setProperty20" propertyName="userValue">
                    <xquery>'Greta_USSD'</xquery>
                </setProperty>
                <setProperty id="_setProperty21" propertyName="passwordValue">
                    <xquery>'qXQvjReSEjy22iaNjPAPB8btX4oEgsgt6nNmTzkQmpU='</xquery>
                </setProperty>
                <setProperty id="_setProperty22" propertyName="lang">
                    <xquery>'Es'</xquery>
                </setProperty>
                <setProperty id="_setProperty23" propertyName="operation">
                    <xquery>'BalanceTransfer'</xquery>
                </setProperty>
                <setProperty id="_setProperty24" propertyName="chanelValue">
                    <xquery>13</xquery>
                </setProperty>
                <setHeader headerName="inputHeaderInteraction" id="_setProperty25">
                    <xquery>resource:classpath:headerFSRequest.xquery</xquery>
                </setHeader>
                <setProperty id="_setProperty26" propertyName="inputInteraction">
                    <xquery>
						declare variable $in.headers.inputHeaderInteraction external;
						declare variable $in.headers.inputBodyInteraction external;
						&lt;soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:head="http://telefonica.com/globalIntegration/header" xmlns:v1="http://telefonica.com/globalIntegration/services/CreateInteraction/v1"&gt;
                        &lt;soapenv:Header&gt;
                        {parse-xml-fragment($in.headers.inputHeaderInteraction)}
                        &lt;/soapenv:Header&gt;
                        &lt;soapenv:Body&gt;
                        {parse-xml-fragment($in.headers.inputBodyInteraction)}
                        &lt;/soapenv:Body&gt;
                        &lt;/soapenv:Envelope&gt;
                    </xquery>
                </setProperty>
                <setBody id="_setBody1">
                    <simple resultType="java.lang.String">${exchangeProperty.inputInteraction}</simple>
                </setBody>
                <camel:setHeader headerName="Accept" id="_setHeader22">
                    <camel:constant>text/xml</camel:constant>
                </camel:setHeader>
                <camel:setHeader headerName="Content-Type" id="_setHeader23">
                    <camel:constant>text/xml</camel:constant>
                </camel:setHeader>
                <camel:enrich id="callCreateinteractionfs_bs_business">
                    <camel:simple>{{service.createinteractionfs_bs_business.url}}</camel:simple>
                </camel:enrich>
                <doCatch id="_doCatch2">
                    <exception>java.lang.Exception</exception>
                    <log id="_log7" loggingLevel="ERROR" message="${exception.message}, ${exception.stacktrace}"/>
                    <to id="_to6" uri="direct:_onErrorHandler-7922032864275128059-13f59d1a.15fdb577996.-7f14"/>
                </doCatch>
            </doTry>
            <setHeader headerName="xqueryContext" id="_setHeader7">
                <simple>${exchangeProperty.body}</simple>
            </setHeader>
            <setProperty id="_setProperty29" propertyName="Mensaje">
                <xquery headerName="xqueryContext">/*</xquery>
            </setProperty>
            <removeHeader headerName="xqueryContext" id="_removeHeader3"/>
            <setProperty id="_setProperty30" propertyName="response">
                <xquery>resource:classpath:AppMovilResponse.xquery</xquery>
            </setProperty>
            <setProperty id="_setProperty31" propertyName="anyType">
                <simple resultType="java.lang.String">${exchangeProperty.response}</simple>
            </setProperty>
            <setProperty id="_setProperty32" propertyName="responseXML">
                <xquery>resource:classpath:removeNamespace.xquery</xquery>
            </setProperty>
            <setProperty id="_setProperty33" propertyName="param1">
                <xquery type="java.lang.String">$responseXML</xquery>
            </setProperty>
            <bean id="_bean11"
                method="xmltoJSON(${exchangeProperty.param1})" ref="JsonXml"/>
            <setProperty id="_setProperty34" propertyName="respuesta">
                <simple>${body}</simple>
            </setProperty>
            <removeProperty id="_removeProperty2" propertyName="param1"/>
            <setHeader headerName="xqueryContext" id="_setHeader8">
                <simple>${exchangeProperty.body}</simple>
            </setHeader>
            <setBody id="_setBody2">
                <xquery headerName="xqueryContext" type="java.lang.String">replace node . with $respuesta</xquery>
            </setBody>
            <setProperty id="_setProperty35" propertyName="body">
                <simple>${body}</simple>
            </setProperty>
            <removeHeader headerName="xqueryContext" id="_removeHeader4"/>
            <setHeader headerName="Content-Type" id="_setHeader9">
                <xquery>'application/*[local-name()="json"];charset=iso-8859-1'</xquery>
            </setHeader>
            <log id="_log8" loggingLevel="INFO" message="Completed response-pipeline PipelinePairConsultaPlanFS_response"/>
        </route>
        <route id="Default1_response">
            <from id="_from5" uri="direct:Default1_response"/>
            <log id="_log9" loggingLevel="INFO" message="Starting response-pipeline Default1_response"/>
            <setProperty id="_setProperty36" propertyName="Message">
                <xquery>'Business Error'</xquery>
            </setProperty>
            <setProperty id="_setProperty37" propertyName="Code">
                <xquery>'1051'</xquery>
            </setProperty>
            <setProperty id="_setProperty38" propertyName="Detail">
                <xquery>'El metodo HTTP no se encuentra definido'</xquery>
            </setProperty>
            <setProperty id="_setProperty39" propertyName="body">
                <xquery>resource:classpath:faultJSONRs.xquery</xquery>
            </setProperty>
            <setHeader headerName="Content-Type" id="_setHeader10">
                <xquery>'application/*[local-name()="json"]'</xquery>
            </setHeader>
            <throwException exceptionType="java.lang.Exception"
                id="_throwException3" message="${body}"/>
            <log id="_log10" loggingLevel="INFO" message="Completed response-pipeline Default1_response"/>
        </route>
        <!--pipeline[@type='error']-->
        <route id="_onErrorHandler-5282490157209716060-252edc8b.15f7d309bbd.-7d73">
            <from id="_from6" uri="direct:_onErrorHandler-5282490157209716060-252edc8b.15f7d309bbd.-7d73"/>
            <log id="_log11" loggingLevel="INFO" message="Starting error-pipeline _onErrorHandler-5282490157209716060-252edc8b.15f7d309bbd.-7d73"/>
            <process id="_process2" ref="faultProcessor"/>
            <setProperty id="_setProperty40" propertyName="Message">
                <xquery>'Technical Error'</xquery>
            </setProperty>
            <setProperty id="_setProperty41" propertyName="Code">
                <xquery>'4050'</xquery>
            </setProperty>
            <setHeader headerName="xqueryContext" id="_setHeader11">
                <simple>${exchangeProperty.fault}</simple>
            </setHeader>
            <setProperty id="_setProperty42" propertyName="Detail">
                <xquery headerName="xqueryContext">
					declare namespace ctx = "http://www.bea.com/wli/sb/context";
					declare variable $in.headers.xqueryContext external;
					concat('Error creando la interación. ',$in.headers.xqueryContext/ctx:errorCode, ' - ', $in.headers.xqueryContext/ctx:reason/text(), ' - ', /ctx:details/text())
				</xquery>
            </setProperty>
            <removeHeader headerName="xqueryContext" id="_removeHeader5"/>
            <setProperty id="_setProperty43" propertyName="body">
                <xquery>resource:classpath:faultJSONRs.xquery</xquery>
            </setProperty>
            <setHeader headerName="Content-Type" id="_setHeader12">
                <xquery>'application/*[local-name()="json"];charset=iso-8859-1'</xquery>
            </setHeader>
            <throwException exceptionType="java.lang.Exception"
                id="_throwException4" message="${body}"/>
            <log id="_log12" loggingLevel="INFO" message="Completed error-pipeline _onErrorHandler-5282490157209716060-252edc8b.15f7d309bbd.-7d73"/>
        </route>
        <route id="_onErrorHandler-5282490157209716060-252edc8b.15f7d309bbd.-7725">
            <from id="_from7" uri="direct:_onErrorHandler-5282490157209716060-252edc8b.15f7d309bbd.-7725"/>
            <log id="_log13" loggingLevel="INFO" message="Starting error-pipeline _onErrorHandler-5282490157209716060-252edc8b.15f7d309bbd.-7725"/>
            <process id="_process3" ref="faultProcessor"/>
            <setProperty id="_setProperty44" propertyName="Message">
                <xquery>'Business Error'</xquery>
            </setProperty>
            <setProperty id="_setProperty45" propertyName="Code">
                <xquery>'4050'</xquery>
            </setProperty>
            <setHeader headerName="xqueryContext" id="_setHeader13">
                <simple>${exchangeProperty.fault}</simple>
            </setHeader>
            <setProperty id="_setProperty46" propertyName="Detail">
                <xquery headerName="xqueryContext">
					declare namespace ctx = "http://www.bea.com/wli/sb/context";
					declare variable $in.headers.xqueryContext external;
					concat('Error creando la interación. ',$in.headers.xqueryContext/ctx:errorCode, ' - ', $in.headers.xqueryContext/ctx:reason/text(), ' - ', /ctx:details/text())
				</xquery>
            </setProperty>
            <removeHeader headerName="xqueryContext" id="_removeHeader6"/>
            <setProperty id="_setProperty47" propertyName="body">
                <xquery>resource:classpath:faultJSONRs.xquery</xquery>
            </setProperty>
            <setHeader headerName="Content-Type" id="_setHeader14">
                <xquery>'application/*[local-name()="json"];charset=iso-8859-1'</xquery>
            </setHeader>
            <throwException exceptionType="java.lang.Exception"
                id="_throwException5" message="${body}"/>
            <log id="_log14" loggingLevel="INFO" message="Completed error-pipeline _onErrorHandler-5282490157209716060-252edc8b.15f7d309bbd.-7725"/>
        </route>
        <route id="_onErrorHandler-7922032864275128059-13f59d1a.15fdb577996.-7f14">
            <from id="_from8" uri="direct:_onErrorHandler-7922032864275128059-13f59d1a.15fdb577996.-7f14"/>
            <log id="_log15" loggingLevel="INFO" message="Starting error-pipeline _onErrorHandler-7922032864275128059-13f59d1a.15fdb577996.-7f14"/>
            <process id="_process4" ref="faultProcessor"/>
            <setProperty id="_setProperty48" propertyName="Message">
                <xquery>'Business Error'</xquery>
            </setProperty>
            <setProperty id="_setProperty49" propertyName="Code">
                <xquery>'1053'</xquery>
            </setProperty>
            <setHeader headerName="xqueryContext" id="_setHeader15">
                <simple>${exchangeProperty.fault}</simple>
            </setHeader>
            <setProperty id="_setProperty50" propertyName="Detail">
                <xquery headerName="xqueryContext">
					declare namespace ctx = "http://www.bea.com/wli/sb/context";
					declare variable $in.headers.xqueryContext external;
					concat('Error creando la interación. ',$in.headers.xqueryContext/ctx:errorCode, ' - ', $in.headers.xqueryContext/ctx:reason/text(), ' - ', /ctx:details/text())
				</xquery>
            </setProperty>
            <removeHeader headerName="xqueryContext" id="_removeHeader7"/>
            <setProperty id="_setProperty51" propertyName="body">
                <xquery>resource:classpath:faultJSONRs.xquery</xquery>
            </setProperty>
            <setHeader headerName="Content-Type" id="_setHeader16">
                <xquery>'application/*[local-name()="json"]'</xquery>
            </setHeader>
            <throwException exceptionType="java.lang.Exception"
                id="_throwException6" message="${body}"/>
            <log id="_log16" loggingLevel="INFO" message="Completed error-pipeline _onErrorHandler-7922032864275128059-13f59d1a.15fdb577996.-7f14"/>
        </route>
    </camelContext>
</beans>
